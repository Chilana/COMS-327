
heap.c,1020
struct heap_node 8,99
  heap_node_t *next;next9,118
  heap_node_t *prev;prev10,139
  heap_node_t *parent;parent11,160
  heap_node_t *child;child12,183
  void *datum;datum13,205
  uint32_t degree;14,220
  uint32_t mark;15,239
#define swap(18,260
#define splice_heap_node_lists(24,372
#define insert_heap_node_in_list(33,684
#define remove_heap_node_from_list(40,908
void print_heap_node(45,1041
void print_heap(61,1363
void print_heap_node_list(78,1665
void heap_init(94,1864
void heap_node_delete(104,2100
void heap_delete(122,2404
heap_node_t *heap_insert(heap_insert133,2569
void *heap_peek_min(heap_peek_min153,2895
static void heap_link(158,2971
static void heap_consolidate(172,3293
void *heap_remove_min(heap_remove_min213,4226
int heap_combine(248,4760
static void heap_cut(277,5411
static void heap_cascading_cut(291,5692
int heap_decrease_key(305,5918
int heap_decrease_key_no_replace(319,6160
int32_t compare(343,6734
char *print_int(print_int348,6833
int main(357,6951

heap.h,245
# define HEAP_H2,15
typedef struct heap_node heap_node_t;11,114
typedef struct heap 13,153
  heap_node_t *min;min14,175
  uint32_t size;15,195
  int32_t (*compare)compare16,212
  void (*datum_delete)datum_delete17,269
} heap_t;18,301

poke327.c,4044
#define malloc(12,180
typedef struct path 18,324
  heap_node_t *hn;hn19,346
  uint8_t pos[pos20,365
  uint8_t from[from21,383
  int32_t cost;22,402
} path_t;23,418
typedef enum dim 25,429
  dim_x,26,448
  dim_y,27,457
  num_dims28,466
} dim_t;29,477
typedef int16_t pair_t[pair_t31,487
#define MAP_X 33,522
#define MAP_Y 34,552
#define MIN_TREES 35,582
#define MIN_BOULDERS 36,612
#define TREE_PROB 37,642
#define BOULDER_PROB 38,672
#define WORLD_SIZE 39,702
#define MOUNTAIN_SYMBOL 41,734
#define BOULDER_SYMBOL 42,768
#define TREE_SYMBOL 43,802
#define FOREST_SYMBOL 44,836
#define GATE_SYMBOL 45,870
#define PATH_SYMBOL 46,904
#define POKEMART_SYMBOL 47,938
#define POKEMON_CENTER_SYMBOL 48,972
#define TALL_GRASS_SYMBOL 49,1006
#define SHORT_GRASS_SYMBOL 50,1040
#define WATER_SYMBOL 51,1074
#define ERROR_SYMBOL 52,1108
#define HIKER 53,1142
#define RIVAL 54,1176
#define PACER 55,1210
#define WANDERERS 56,1244
#define SENTRIES 57,1278
#define EXPLORERS 58,1312
#define SWIMMER 59,1346
#define DIJKSTRA_PATH_MAX 62,1382
#define mappair(64,1423
#define mapxy(65,1480
#define heightpair(66,1515
#define heightxy(67,1578
typedef enum __attribute__ ((__packed__)) terrain_type 69,1620
  ter_boulder,70,1677
  ter_tree,71,1692
  ter_path,72,1704
  ter_mart,73,1716
  ter_center,74,1728
  ter_grass,75,1742
  ter_clearing,76,1755
  ter_mountain,77,1771
  ter_forest,78,1787
  ter_water,79,1801
  ter_gate,80,1814
  num_terrain_types,81,1826
  ter_debug82,1847
} terrain_type_t;83,1859
typedef enum __attribute__ ((__packed__)) character_type 85,1878
  char_pc,86,1937
  char_hiker,87,1948
  char_rival,88,1962
  char_swimmer,89,1976
  char_wanderer,90,1992
  char_pacer,91,2009
  char_explorer,92,2023
  char_sentries,93,2040
  char_other,94,2057
  num_character_types96,2072
} character_type_t;97,2094
typedef struct pc 99,2115
  pair_t pos;100,2135
} pc_t;101,2149
typedef struct wanderer{wanderer103,2158
  pair_t pos;104,2183
} wandNPC_t;106,2221
typedef struct npc{npc108,2235
  wandNPC_t wNPC;109,2255
} npc_t;110,2273
typedef struct charType{charType112,2283
  int32_t seqNum;113,2308
  char dir;114,2326
  int nextTurn;115,2338
  character_type_t c;116,2354
  pc_t pc;117,2376
  terrain_type_t ter;118,2387
  pair_t pos;119,2409
} char_t;120,2423
typedef struct map 122,2434
  terrain_type_t map[map123,2455
  char_t *charT[charT124,2491
  uint8_t height[height125,2522
  int8_t n,126,2554
  int8_t n, s,126,2554
  int8_t n, s, e,126,2554
  int8_t n, s, e, w;126,2554
} map_t;127,2575
typedef struct queue_node 129,2585
  int x,130,2613
  int x, y;130,2613
  struct queue_node *next;next131,2625
} queue_node_t;132,2652
typedef struct world 134,2669
  map_t *world[world135,2692
  pair_t cur_idx;136,2732
  map_t *cur_map;cur_map137,2750
  int hiker_dist[hiker_dist141,2890
  int rival_dist[rival_dist142,2922
  char_t pc;143,2954
} world_t;146,2985
world_t world;150,3152
heap_t npcH;151,3167
#define IM 154,3238
int32_t move_cost[move_cost155,3267
#undef IM162,3608
static int32_t path_cmp(164,3619
static int32_t edge_penalty(168,3742
static void dijkstra_path(178,3960
static int build_paths(279,7857
static int gaussian[gaussian370,9529
static int smooth_height(378,9692
static void find_building_location(535,13727
static int place_pokemart(566,15213
static int place_center(580,15505
static terrain_type_t border_type(595,15957
static int map_terrain(639,16887
static int place_boulders(822,21412
static int place_trees(840,21782
static int new_map(862,22344
static void print_map(926,24244
void init_world(1027,26525
void delete_world(1033,26625
#define ter_cost(1047,26855
static int32_t hiker_cmp(1049,26909
static int32_t rival_cmp(1056,27208
void pathfind(1063,27507
static int32_t char_cmp(1298,37903
void init_pc(1309,38156
void init_npc(1332,38536
void move_npc(1439,40682
void print_hiker_dist(1644,48474
void print_rival_dist(1660,48768
int main(1677,49102
